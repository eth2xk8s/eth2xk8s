name: Automatically generate k8s yamls

on:
  push:
    branches:
      - master # Set a branch

jobs:
  yaml-generation:
    runs-on: ubuntu-latest
    env:
      CLIENTS: "prysm,lighthouse,teku,nimbus"
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      - name: Generate yamls for Ethereum 2.0 clients
        run: |
          IFS="," read -ra CLIENTS <<< "$CLIENTS"
          for client in "${CLIENTS[@]}"
            do
            for fullfile in ./${client}/helm/values-files/* 
              do
              filename="${fullfile##*/}"               # Remove path.
              foldername="${filename%.*}"              # Remove file extension.
              foldername="${foldername##*values-}"     # Remove 'values-' string.
              helm template ./${client}/helm -f $fullfile --output-dir ./${client}/temp/${foldername}
            done
          done

      - name: Rearrange the locations for yaml files.
        run: |
          IFS="," read -ra CLIENTS <<< "$CLIENTS"
          for client in "${CLIENTS[@]}"
            do
            for tempdir in ./${client}/temp/*
              do
              dir="./${client}/${tempdir##*/}"               # Remove path.
              if [ ! -d "$dir" ]; then mkdir $dir; fi        # Create yaml folder if it doesn't exist.
              mv ${tempdir}/eth2-${client}/templates/* $dir  # Move yamls to the correct folder.
            done
            rm -rf ./${client}/temp
          done

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_KEY }}
          passphrase: ${{ secrets.KEY_PASSPHRASE }}
          git-user-signingkey: true
          git-commit-gpgsign: true

      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          branch="generated-yamls"
          git checkout -b $branch
          git add -A
          git commit -S -m 'Automatically generate k8s yamls with eth2 client Helm Charts.'
          
          # Only continue when there's a new commit.
          if [ "$?" -eq "1"]; then exit 0; fi

          git push origin $branch --force
          echo "Change(s) are pushed."

          count=$(gh pr list --label autogen | grep "$branch" |  wc -l | tr -d ' ')
          if [ "$count" -eq "0" ]; then
            gh pr create --fill --label autogen
          else
            echo "PR is already opened."
          fi
