{{- range $key, $nimbusClient := .Values.nimbus.clients }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $nimbusClient.name }}
  namespace: nimbus
  labels:
    app: {{ $nimbusClient.name }}
spec:
  selector:
    matchLabels:
      app: {{ $nimbusClient.name }}
  replicas: 1
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ $nimbusClient.name }}
    spec:
      initContainers:
      - name: init-wait
        image: alpine:3.13.2
        command: ['sh', '-c', 'echo Wait for {{ $.Values.nimbus.startWaitTime }} seconds for extra slashing protection! && sleep {{ $.Values.nimbus.startWaitTime }}']
      containers:
      - name: nimbus
        image: "{{ $.Values.image.nimbusImage }}:{{ $.Values.image.versionTag }}"
        args:
        {{- if $.Values.ethereumTestnet }}
        - --network={{ $.Values.ethereumTestnet }}
        {{- end }}
        - --non-interactive
        - --tcp-port={{ $nimbusClient.p2pTcpPort }}
        - --udp-port={{ $nimbusClient.p2pUdpPort }}
        - --data-dir=/data/nimbus/beacon
        - --validators-dir=/data/nimbus/validators
        - --secrets-dir=/data/nimbus/secrets
        - --web3-url={{ $nimbusClient.web3Provider }}
        {{- range .fallbackWeb3Providers }}
        - --web3-url={{ . }}
        {{- end }}
        - --graffiti={{ $nimbusClient.graffiti | quote }}
        ports:
        - containerPort: {{ $nimbusClient.p2pTcpPort }}
          hostPort: {{ $nimbusClient.p2pTcpPort }}
          protocol: TCP
        - containerPort: {{ $nimbusClient.p2pUdpPort }}
          hostPort: {{ $nimbusClient.p2pUdpPort }}
          protocol: UDP
        volumeMounts:
        - name: nimbus-beacon-storage
          mountPath: /data/nimbus/beacon
          readOnly: false
        - name: nimbus-validators-storage
          mountPath: /data/nimbus/validators
          readOnly: false
        - name: nimbus-secrets-storage
          mountPath: /data/nimbus/secrets
          readOnly: true
      volumes:
      {{- if eq $.Values.persistentVolumeType "nfs" }}
      - name: nimbus-beacon-storage
        nfs:
          path: {{ $nimbusClient.dataVolumePath }}
          server: {{ $.Values.nfs.serverIp }}
          readOnly: false
      - name: nimbus-validators-storage
        nfs:
          path: {{ $nimbusClient.validatorsVolumePath }}
          server: {{ $.Values.nfs.serverIp }}
          readOnly: false
      - name: nimbus-secrets-storage
        nfs:
          path: {{ $nimbusClient.secretsVolumePath }}
          server: {{ $.Values.nfs.serverIp }}
          readOnly: true
      {{- else }}
      - name: nimbus-beacon-storage
        hostPath:
          path: {{ $nimbusClient.dataVolumePath }}
      - name: nimbus-validator-storage
        hostPath:
          path: {{ $nimbusClient.validatorsVolumePath }}
      - name: nimbus-secret-storage
        hostPath:
          path: {{ $nimbusClient.secretsVolumePath }}
      {{- end }}
      securityContext:
        runAsUser: {{ $.Values.nfs.user }}
        runAsGroup: {{ $.Values.nfs.group }}
      serviceAccountName: nimbus
      restartPolicy: Always

---
{{- end }}
