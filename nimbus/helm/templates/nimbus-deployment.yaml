{{- range $key, $client := .Values.nimbus.clients }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $client.name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $client.name }}
spec:
  selector:
    matchLabels:
      app: {{ $client.name }}
  replicas: 1
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ $client.name }}
    spec:
      initContainers:
      - name: init-wait
        image: alpine:3.13.2
        command: ['sh', '-c', 'echo Wait for {{ $.Values.nimbus.startWaitTime }} seconds for extra slashing protection! && sleep {{ $.Values.nimbus.startWaitTime }}']
      containers:
      - name: nimbus
        image: "{{ $.Values.image.nimbusImage }}:{{ $.Values.image.versionTag }}"
        args:
        {{- if $.Values.ethereumTestnet }}
        - --network={{ $.Values.ethereumTestnet }}
        {{- end }}
        - --non-interactive
        - --tcp-port={{ $client.p2pTcpPort }}
        - --udp-port={{ $client.p2pUdpPort }}
        - --data-dir={{ $client.dataVolumePath }}
        - --validators-dir={{ $client.validatorsVolumePath }}
        - --secrets-dir={{ $client.secretsVolumePath }}
        - --web3-url={{ $client.web3Provider }}
        {{- range .fallbackWeb3Providers }}
        - --web3-url={{ . }}
        {{- end }}
        - --graffiti={{ $client.graffiti | quote }}
        ports:
        - containerPort: {{ $client.p2pTcpPort }}
          hostPort: {{ $client.p2pTcpPort }}
          protocol: TCP
        - containerPort: {{ $client.p2pUdpPort }}
          hostPort: {{ $client.p2pUdpPort }}
          protocol: UDP
        volumeMounts:
        {{- include "nimbus.volumeMounts" $client | indent 8 }}
      volumes:
      {{- include "nimbus.volumes" (merge $client (pick $.Values "persistentVolumeType" "nfs")) | indent 6 }}
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      serviceAccountName: nimbus
      restartPolicy: Always

---
{{- end }}
