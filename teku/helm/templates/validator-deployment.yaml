{{- range $key, $validatorClient := .Values.validatorClients }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $validatorClient.name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $validatorClient.name }}
spec:
  selector:
    matchLabels:
      app: {{ $validatorClient.name }}
  replicas: 1
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ $validatorClient.name }}
    spec:
      initContainers:
      - name: init-wait
        image: alpine:3.13.2
        command: ['sh', '-c', 'echo "Wait for {{ $.Values.validatorStartWaitTime }} second(s) for extra slashing protection!" && sleep {{ $.Values.validatorStartWaitTime }}']
      containers:
      - name: {{ $validatorClient.name }}
        image: "{{ $.Values.image.validatorImage }}:{{ $.Values.image.versionTag }}"
        args:
        - vc 
        {{- if $.Values.ethereumTestnet }}
        - --network={{ $.Values.ethereumTestnet }}
        {{- end }}
        - --beacon-node-api-endpoint=http://{{ $.Values.beacon.name }}-service.{{ $.Values.namespace }}.svc.cluster.local:5051
        - --data-validator-path={{ $validatorClient.dataDirPath }}
        - --validator-keys={{ $validatorClient.validatorKeysDirPath }}:{{ $validatorClient.validatorKeyPasswordsDirPath }}
        - --validators-graffiti={{ $validatorClient.graffiti | quote }}
        - --log-destination=CONSOLE
        volumeMounts:
        {{- include "teku.volumeMounts" $validatorClient | indent 8 }}
      volumes:
      {{- include "teku.volumes" (merge $validatorClient (pick $.Values "persistentVolumeType" "nfs")) | indent 6 }}
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      serviceAccountName: validator-client
      restartPolicy: Always

---
{{- end }}
